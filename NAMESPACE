# Generated by roxygen2: do not edit by hand

export(data.checks)
export(data_bats)
export(data_countries)
export(data_taxonrank)
export(dc_basisofrecord_present)
export(dc_basisofrecord_standard)
export(dc_class_valid)
export(dc_coordinates_notzero)
export(dc_coordinateuncertainty_inrange)
export(dc_country_countrycode_consistent)
export(dc_country_present)
export(dc_country_standard)
export(dc_countrycode_present)
export(dc_datageneralizations_present)
export(dc_dateidentified_standard)
export(dc_day_standard)
export(dc_dctype_present)
export(dc_decimallatitude_inrange)
export(dc_decimallatitude_present)
export(dc_decimallongitude_inrange)
export(dc_decimallongitude_present)
export(dc_earliest_date)
export(dc_establishmentmeans_present)
export(dc_eventdate_inrange)
export(dc_eventdate_present)
export(dc_eventdate_standard)
export(dc_eventtemporal_present)
export(dc_family_valid)
export(dc_genus_valid)
export(dc_geodeticdatum_present)
export(dc_kingdom_valid)
export(dc_license_present)
export(dc_location_present)
export(dc_maxelevation_inrange)
export(dc_mindepth_lessthan_maxdepth)
export(dc_mindepth_maxdepth_inrange)
export(dc_minelevation_inrange)
export(dc_minelevation_lessthan_maxelevation)
export(dc_month_standard)
export(dc_occurrenceid_present)
export(dc_occurrenceid_standard)
export(dc_occurrencestatus_present)
export(dc_occurrencestatus_standard)
export(dc_order_valid)
export(dc_phylum_valid)
export(dc_scientificname_present)
export(dc_spatial_resolution)
export(dc_taxo_level)
export(dc_taxon_present)
export(dc_taxonid_present)
export(dc_taxonrank_present)
export(dc_taxonrank_standard)
export(dc_temporal_resolution)
export(dc_year_inrange)
export(dc_year_present)
export(perform_dc)
export(perform_test_dc)
export(summary_dc)
export(tax_available_name)
exportClasses(DataCheck)
exportClasses(DataCheckFlag)
exportClasses(DataCheckFlagSet)
exportClasses(DataCheckSet)
importFrom(gh,gh)
importFrom(kableExtra,kable_styling)
importFrom(kableExtra,row_spec)
importFrom(knitr,kable)
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
importFrom(methods,new)
importFrom(rmarkdown,render)
importFrom(stats,na.omit)
importFrom(taxize,classification)
importFrom(utils,capture.output)
importFrom(utils,globalVariables)
importFrom(yaml,read_yaml)
importFrom(yaml,yaml.load_file)
